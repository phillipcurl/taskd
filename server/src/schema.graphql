# import Post from "./generated/prisma.graphql"

type Query {
  me: User
  allTasks: [Task!]!
  task(id: ID!): Task
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  capture(title: String): Task!
  createDraft(title: String!, text: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
}

type Subscription {
  feedSubscription: PostSubscriptionPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  phone: String
  avatarColor: String
  tasks: [Task!]!
  posts: [Post!]!
  notifications: [Notification!]!
}

type Task {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: User!
  categories: [Category!]!
  # assignees: [User]
  title: String
  description: String
  startDate: DateTime
  finishDate: DateTime
  isComplete: Boolean!
  isClarified: Boolean!
  duration: Int
  priority: Priority
  subTasks: [SubTask!]!
  status: TASK_STATUS
  tags: [Tag!]!
  attachments: [File!]!
}

type TaskUpdateInput {
  title: String
  description: String
  startDate: DateTime
  isComplete: Boolean!
  priority: Priority
  status: TASK_STATUS
}
